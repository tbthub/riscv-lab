实现流程：
    0. GDB 进入 main 函数
    1. spinlock
    2. 用于调试的 printk
    3. 伙伴系统 12-12
    4. 简（丑）陋的 Slab 分配器 12-13
    5. 基于 Slab，实现kmalloc与kfree 12-13
    6. 初步实现内核页表映射 12-14
    7. 实现内核线程与基本的调度 12-16
    8. 实现信号量、基于完成互斥锁、睡眠锁12-21
    9. 实现哈希表 12-22
    10.块IO框架 1-3
    11.工作队列机制、定时器任务、线程自睡眠 1-4
    12.基于 virio_blk 驱动实现磁盘IO 1-5
    13.文件系统磁盘格式化 1-9

下面任务：
    0. 磁盘驱动开发，支持磁盘块读写                 √
    1. 实现缓存机制                               √
    2. 调接口，尝试分层
    3. 超级块格式、文件系统格式化、挂载点管理器
    4. 加入红黑树
    5. 实现 hash_map，内部采用红黑树
    6. 采用簇对位图进行优化
    7. 将时钟中断唤醒任务放在下半部
    8. 内核线程处理脏的 inode
    9. 根据 efs_i_get 重构 buf_get               √
    10.efs_i_bmap 效率问题
    11.修改vaddr const


后面的：
    1. 虚存
    2. Trap
    3. 进程
    4. 调度
    5. 缓存
    6. 文件系统

待解决问题：
    0. 页面标志位的使用
    1. uart_start 缓冲区输出后，应该唤醒写者
    2. uart_putc 缓冲区满后，应该陷入睡眠
    3. vm page_free 时候页面标志处理没完成
    4. vm freerange 初始化缓存部分没有完成
    5. printk 完善
    6. (重要)多核CPU的线程并发竞争问题，造成CPU挂掉 test.thread.c  -- 已解决
    7. (重要)初始化与释放资源的问题